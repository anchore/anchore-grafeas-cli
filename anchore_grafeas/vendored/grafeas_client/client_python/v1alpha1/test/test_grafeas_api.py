# coding: utf-8

"""
    Grafeas API

    An API to insert and retrieve annotations on cloud artifacts.

    OpenAPI spec version: 0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.grafeas_api import GrafeasApi


class TestGrafeasApi(unittest.TestCase):
    """ GrafeasApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.grafeas_api.GrafeasApi()

    def tearDown(self):
        pass

    def test_create_note(self):
        """
        Test case for create_note

        
        """
        pass

    def test_create_occurrence(self):
        """
        Test case for create_occurrence

        
        """
        pass

    def test_delete_note(self):
        """
        Test case for delete_note

        
        """
        pass

    def test_delete_occurrence(self):
        """
        Test case for delete_occurrence

        
        """
        pass

    def test_get_note(self):
        """
        Test case for get_note

        
        """
        pass

    def test_get_occurrence(self):
        """
        Test case for get_occurrence

        
        """
        pass

    def test_get_occurrence_note(self):
        """
        Test case for get_occurrence_note

        
        """
        pass

    def test_get_operation(self):
        """
        Test case for get_operation

        
        """
        pass

    def test_list_note_occurrences(self):
        """
        Test case for list_note_occurrences

        
        """
        pass

    def test_list_notes(self):
        """
        Test case for list_notes

        
        """
        pass

    def test_list_occurrences(self):
        """
        Test case for list_occurrences

        
        """
        pass

    def test_list_operations(self):
        """
        Test case for list_operations

        
        """
        pass

    def test_update_note(self):
        """
        Test case for update_note

        
        """
        pass

    def test_update_occurrence(self):
        """
        Test case for update_occurrence

        
        """
        pass

    def test_update_operation(self):
        """
        Test case for update_operation

        
        """
        pass


if __name__ == '__main__':
    unittest.main()
